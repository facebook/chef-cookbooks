# rsyslog v5 configuration file

# This rsyslog.conf was generated by Chef. To make changes, see
# fb_syslog/README.md

# For more information see /usr/share/doc/rsyslog-*/rsyslog_conf.html
# If you experience problems, see http://www.rsyslog.com/doc/troubleshoot.html

# Use FQDN for hostname field
$PreserveFQDN on

#### MODULES ####
# Provides support for local system logging (e.g. via logger command)
$ModLoad imuxsock
<% if node.centos? && !node.centos6? -%>
$OmitLocalLogging off
<% end -%>
# Provides kernel logging support (previously done by rklogd)
$ModLoad imklog
# Log to programs. Used to log to scribe_cat
module(load="omprog")
<% if node['fb_syslog']['rsyslog_relp_tls'] -%>
module(load="omrelp")
<% end -%>
<% if node['fb_syslog']['rsyslog_server'] -%>
# UDP / TCP reception
$ModLoad imudp
$ModLoad imtcp
# Provides periodic output of rsyslog internal counters
module(load="impstats" severity="7" resetCounters="on")

<%   non_ruleset_ports = node['fb_syslog']['rsyslog_nonruleset_ports'].to_hash %>
<%   non_ruleset_ports.each do |proto, ports| -%>
<%     if proto == 'udp' -%>
<%       ports.each do |port| -%>
$UDPServerRun <%= port %>
<%       end -%>
<%     elsif proto == 'tcp' -%>
<%       ports.each do |port| -%>
$InputTCPServerRun <%= port %>
<%       end -%>
<%     end -%>
<%   end -%>

## Stats logging
syslog.=debug  /var/log/rsyslog-stats
<% end -%>

#### GLOBAL DIRECTIVES ####

# Use default timestamp format
$ActionFileDefaultTemplate RSYSLOG_TraditionalFileFormat

<% if node['fb_syslog']['rsyslog_escape_cchars'] -%>
# Escape non-printable control characters in messages entering syslog
$EscapeControlCharactersOnReceive on
<% end -%>
<% unless node['fb_syslog']['rsyslog_additional_sockets'].empty? %>
# Additional sockets
$InputUnixListenSocketCreatePath on
<%   node['fb_syslog']['rsyslog_additional_sockets'].each do |sock| %>
$AddUnixListenSocket <%= sock %>
<%   end %>

<% end %>
# File syncing capability is disabled by default. This feature is usually not required,
# not useful and an extreme performance hit
#$ActionFileEnableSync on

#
# Set the default permissions for all log files.
#
$FileOwner root
$FileGroup root
$FileCreateMode 0644
$DirCreateMode 0755
$Umask 0002

<% unless node['fb_syslog']['rsyslog_early_lines'].empty? %>
# rsyslog magic that should (be able to) win over standard syslog stuff
<%   node['fb_syslog']['rsyslog_early_lines'].each do |line| %>
<%=    line %>
<%   end %>

<% end %>
<% node['fb_syslog']['syslog-entries'].to_hash.each_value do |entry| -%>

<%   if entry['comment'] -%>
<%=    FB::Helpers.commentify(entry['comment']) %>
<%   end -%>
<%#  syslog doesn't support not flushing on OS X, so we cannot use the `-`
     prefix for files. %>
<%   action = entry['action'] -%>
<%   if node.macosx? && action.start_with?('-') -%>
<%     action.slice!(0) -%>
<%   end -%>
<%=  "%s  %s" % [entry['selector'], action] %>
<% end -%>

<% unless node['fb_syslog']['rsyslog_late_lines'].empty? %>
<%   node['fb_syslog']['rsyslog_late_lines'].each do |line| %>
<%=    line %>
<%   end %>

<% end %>
<% rulesets = node['fb_syslog']['rsyslog_rulesets'].to_hash %>
<% unless rulesets.empty? -%>
### Custom Rulesets ###
<%   rulesets.each do |ruleset_name, specs| -%>
$RuleSet <%= ruleset_name %>
<%     specs['rules'].each do |name, filters| -%>
# <%=    name %>
<%       filters.each do |filter| -%>
<%=        filter %>
<%       end -%>

<%     end -%>
<%     if specs['proto'] == 'udp' -%>
$InputUDPServerBindRuleset <%= ruleset_name %>
$UDPServerRun <%= specs['port'] %>

<%     elsif specs['proto'] == 'tcp' -%>
$InputTCPServerBindRuleset <%= ruleset_name %>
$InputTCPServerRun <%= specs['port'] %>

<%     end -%>
<%   end -%>
<% end -%>

<%
   unless node['fb_syslog']['rsyslog_server']
     unless node['fb_syslog']['rsyslog_facilities_sent_to_remote'].empty?
       rsyslog_port = node['fb_syslog']['rsyslog_port']
       rsyslog_upstream = node['fb_syslog']['rsyslog_upstream']
       if node['fb_syslog']['rsyslog_relp_tls']
         rsyslog_type = 'omrelp'
         extra_lines = %w{
           tls="on"
         }
       else
         rsyslog_type = 'omfwd'
         extra_lines = []
       end
       if node.linux?
%>
# Remote Logging
<%=      node['fb_syslog']['rsyslog_facilities_sent_to_remote'].join(',') %> {
  action(type="<%= rsyslog_type %>"
    name="Remote_Logging"
    target="<%= rsyslog_upstream %>"
    port="<%= rsyslog_port %>"
<%       unless node['fb_syslog']['rsyslog_relp_tls'] %> 
    protocol="tcp"
<%       end %>
    action.reportSuspension="off"
    action.reportSuspensionContinuation="off"
<%       extra_lines.each do |line| %>
    <%=    line %>
<%       end  # if extra_lines.each %>
  )
}
<%     end # if node.linux? %>
<%   end # if we have rsyslog_facilities_sent_to_remote %>
<% end # unless server -%>
