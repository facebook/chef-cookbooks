name: Reusable Kitchen Tests

on:
  workflow_call:
    inputs:
      universe:
        description: 'Run in universe mode (checkout chef-cookbooks and copy upstream cookbooks)'
        type: boolean
        required: false
        default: false
      suite:
        description: 'Test Kitchen suites to run'
        type: string
        required: false
        default: 'default'
      additional_os_list: # Ensure this is present
        description: 'JSON string array of additional OS platforms to add to the Test Kitchen matrix (e.g., ''["my-custom-os-1", "my-custom-os-2"]'').'
        type: string
        required: false
        default: '[]'
      kitchen_local_yaml:
        type: string
        required: false

jobs:
  prepare-matrix:
    runs-on: ubuntu-latest
    outputs:
      os_matrix_json: ${{ steps.generate_matrix.outputs.os_matrix_json }}
    env:
      # fedora-41 requires DNF5
      BASE_OS_LIST: '["centos-stream-9", "centos-stream-10", "ubuntu-2204", "ubuntu-2404", "debian-12", "fedora-40"]'
    steps:
      - name: Generate OS Matrix JSON
        id: generate_matrix
        run: |
          # Ensure jq is available, or use a pre-installed action if needed. Most ubuntu-latest runners have it.
          if ! command -v jq &> /dev/null
          then
              echo "jq could not be found, installing..."
              sudo apt-get update && sudo apt-get install -y jq
          fi
          COMBINED_MATRIX_JSON=$(jq -c -n --argjson base '${{ env.BASE_OS_LIST }}' --argjson additional '${{ inputs.additional_os_list }}' '$base + $additional | unique')
          echo "Generated OS Matrix JSON: $COMBINED_MATRIX_JSON"
          echo "os_matrix_json=$COMBINED_MATRIX_JSON" >> $GITHUB_OUTPUT
        shell: bash

  run-kitchen-tests:
    needs: [prepare-matrix]
    strategy:
      fail-fast: false
      matrix:
        os: ${{ fromJSON(needs.prepare-matrix.outputs.os_matrix_json) }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout current repository
        uses: actions/checkout@v4
        with:
          path: ${{ inputs.universe && 'universe' || '.' }}

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3'

      - name: Install Chef Workstation
        uses: actionshub/chef-install@2.0.4
        with:
          project: chef-workstation
          version: 25.2.1075

      - name: Checkout chef-cookbooks (Universe Mode)
        if: inputs.universe
        uses: actions/checkout@v4
        with:
          repository: facebook/chef-cookbooks
          path: chef-cookbooks

      - name: Copy upstream cookbooks (Universe Mode)
        if: inputs.universe
        run: ./chef-cookbooks/scripts/copy_upstream_cookbooks

      - name: Copy upstream kitchen config (Universe Mode)
        if: inputs.universe
        run: cp ./chef-cookbooks/.kitchen.yml ./universe

      - name: Set KITCHEN_LOCAL_YAML Environment Variable
        if: inputs.kitchen_local_yaml != '' && inputs.kitchen_local_yaml != null
        run: echo "KITCHEN_LOCAL_YAML=${{ inputs.kitchen_local_yaml }}" >> $GITHUB_ENV
        shell: bash

      - name: Run Kitchen
        uses: actionshub/test-kitchen@main
        with:
          suite: ${{ inputs.suite }}
          os: ${{ matrix.os }}
          working-directory: ${{ inputs.universe && 'universe' || '.' }}
        env:
          CHEF_LICENSE: accept-no-persist
          CHEF_VERSION: 18.6.14
