# This file is maintained by Chef. Do not edit, all changes will be
# overwritten. See opsfiles/chef/cookbooks/core/fb_grub/README.md

<%
  root_arg = node['fb_grub']['rootfs_arg']
  cmdline_args = node['fb_grub']['kernel_cmdline_args']

  kargs = "ro root=#{root_arg} #{cmdline_args.uniq.join(' ')}"
  if node['fb_grub']['_rootflags']
    kargs << " rootflags=#{node['fb_grub']['_rootflags']}"
  end
  if node['fb_grub']['_root_uuid']
    root_line = "search --set=root --fs-uuid #{node['fb_grub']['_root_uuid']}"
  elsif node['fb_grub']['_root_label']
    root_line = "search --set=root --label #{node['fb_grub']['_root_label']}"
  else
    root_line = "set root='(#{node['fb_grub']['root_device']})'"
  end

  terminal = node['fb_grub']['terminal'].join(' ')
  serial = node['fb_grub']['serial'].to_hash

  path_prefix = node['fb_grub']['path_prefix']

  users = node['fb_grub']['users'].to_hash
  superusers = []
  users.each do |user, data|
    if data['is_superuser']
      superusers << user
    end
  end
  restriction = ''
  if !users.empty? && !node['fb_grub']['require_auth_on_boot']
    restriction = '--unrestricted '
  end

  # default is 0 because we'll automagically put the non-kdump kernel first
-%>
set default=0
set timeout=<%= node['fb_grub']['timeout'] %>
<% if node['fb_grub']['terminal'].include?('serial') -%>
serial --speed=<%= serial['speed'] %> --unit=<%= serial['unit'] %> --word=<%= serial['word'] %> --parity=<%= serial['parity'] %> --stop=<%= serial['stop'] %>
<% end -%>
terminal_input <%= terminal %>
terminal_output <%= terminal %>
<% unless superusers.empty? %>

set superusers="<%= superusers.join(' ') %>"
<% end %>
<% users.each do |user, data| %>
<%   if data['password'].start_with?('grub.pbkdf2.') %>
password_pbkdf2 <%= user %> <%= data['password'] %>
<%   else %>
password <%= user %> <%= data['password'] %>
<%   end %>
<% end %>
<% if node['fb_grub']['enable_bls'] %>

# load_video directive injected by grubby by default
# so it must be at least defined or entries would be unbootable
function load_video {
  if [ x$feature_all_video_module = xy ]; then
    insmod all_video
  else
    insmod efi_gop
    insmod efi_uga
    insmod ieee1275_fb
    insmod vbe
    insmod vga
    insmod video_bochs
    insmod video_cirrus
  fi
}

# efi will use different location for entries and env file
# force it to use /boot/ device
<%= root_line %>

# The following grub logic utilizing grubenv block works for both
# efi and bios boot on drives with the following partitions and labels
#
# lsblk -o name,label,mountpoint
#
# nvme0n1
# ├─nvme0n1p1 /efi  /boot/efi
# ├─nvme0n1p2 /boot /boot
# ├─nvme0n1p3 /swap [SWAP]
# └─nvme0n1p4 /     /
#
# nvme0n1
# ├─nvme0n1p1 /boot /boot
# ├─nvme0n1p2 /swap [SWAP]
# └─nvme0n1p3 /     /
#
# nvme0n1
# ├─nvme0n1p1 /efi  /boot/efi
# ├─nvme0n1p2 /boot /boot
# └─nvme0n1p3 /     /
#
# nvme0n1
# ├─nvme0n1p1 /efi  /boot/efi
# ├─nvme0n1p2 /swap [SWAP]
# └─nvme0n1p3 /     /
#
# We assume from here on that root (grub environment variable) had been
# appropriately set to the correct labeled partition ("/" or "/boot")
# where boot loader entries could be found.

# Some older version of blscfg had used boot instead of root
set boot=$root
# In cases where blsdir set here is incorrect
# blscfg logic will reattempt with ($root)/boot/GRUB_BLS_CONFIG_PATH
set blsdir=/loader/entries

# Note installations of some grub2-efi rpms on our fleet have been known to
# create symbolic link of grubenv on config_directory path and in other 
# instances had permanently relocated the grubenv block to /boot/grub2/ path.
# Scenario 1 : We have found grubenv on the config_directory path
# config_directory points to either (hd0,gpt1)/EFI/CENTOS or (hd0,gpt1)/grub2
# Scenario 2 : We did not find grubenv as a regular file (could have been a symbolic link)
# on the config_directory path so lets hunt for the grubenv using the current root value
# Scenario 3 : We may have bios loaded onto a /boot label partition with no grubenv and
# with root also pointing to the same; we could retry searching for grubenv
# on "/" labeled boot drive partition on known EFI path without altering the current
# root (grub environment variable) value.
# Scenario 4 : We did not find grubenv in any known device, path, thus saved_entry
# will be unset, and default (grub environment variable) continues to be 0
if [ -f ${config_directory}/grubenv ]; then
  load_env -f ${config_directory}/grubenv
else
  if [ -f ($root)/grub2/grubenv ]; then
    load_env -f ($root)/grub2/grubenv
  elif [ -f ($root)/boot/grub2/grubenv ]; then
    load_env -f ($root)/boot/grub2/grubenv
<% if node['fb_grub']['search_enabled'] -%>
  else
    search --set=retry --label /
    if [ -f ($retry)/boot/efi/EFI/centos/grubenv ]; then
      load_env -f ($retry)/boot/efi/EFI/centos/grubenv
    fi
<% end -%>
  fi
fi

# When load_env is successful, it would have set saved_entry
# with value (boot loader entry filename) it had parsed from the 
# grubenv block. When saved_entry is set, lets set it to 
# default (grub environment variable) to hint blscfg
if [ "${saved_entry}" ] ; then
  set default="${saved_entry}"
fi

# enforce kernelops from grub.cfg which is managed by chef
# rather then variable from grubby. Single quotes are required
# to preserve escape chars in kernel opts like memmap=128M\$1G
set kernelopts='<%= kargs %>'

insmod blscfg
# Passing default (not $default) as arg instructs blscfg to create bls
# menu entries with flags show_non_default=false, show_default=true
# ie only the entry that it deems to match grub environment variable default
# (which can have value index(=0) or boot loader entry filename)
blscfg default
# We prefer to boot into the kernel that blscfg was able to add
# to the menu. When blscfg is not successful in populating the menu,
# then the first menu entry below this line will be chosen to boot
<% end %>
<% node['fb_grub']['kernels'].to_hash.each do |kernel, data| -%>

menuentry '<%= kernel %>' <%= restriction %>{
  <%= root_line %>
  <%= @linux_statement %> <%= path_prefix %><%= data['path'] %> <%= kargs %>
<%   if data['initrd_path'] -%>
  <%= @initrd_statement %> <%= path_prefix %><%= data['initrd_path'] %>
<%   end -%>
}
<% end -%>
