#
# This fstab is generated by Chef. Do not modify directly.
#
# BEGIN OS-INCLUDED STUFF
<%
    mounts = node['fb_fstab']['mounts'].to_hash
    node['fb_fstab']['_basefilecontents'].each_line do |line|
      next if line.strip.empty?
      # do not add swap if swap is disabled on the box
      next if line.include?('swap') && !node['fb_swap']['enabled']
      line_dev_spec = line.split[0]
      # First we do a naive pass at letting people override base mounts - this
      # is important so people can override by LABEL if they want to set
      # allow_mount_failure on a disk that doesn't exist, which will raise
      # an error and kill the run.
      next if mounts.any? do |name, data|
        line_dev_spec == data['device']
      end
      # If that failed, we canonicalize (if possible) and try again against
      # canonicalized versions of what's in the user's config
      fs_spec = FB::Fstab.canonicalize_device(line_dev_spec, node)
      # If someone has a more specific mount, don't use the original
      next if mounts.any? do |name, data|
        begin
          fs_spec == FB::Fstab.canonicalize_device(data['device'], node)
        rescue RuntimeError
          # Note that we don't 'next true' here, because we want this to
          # show up in fstab even if the disk is broken.
          next if data['allow_mount_failure']
          raise
        end
      end
      # OK, if we're here, we can print the line... 
      _buf << line
    end
%>
# END OS-INCLUDED STUFF
<%
    mounts.each do |name, data|
     fs = data['uuid'] ? "UUID=#{data['uuid']}" : data['device']
     data['type'] = 'auto' unless data['type']
     data['pass'] = 2 unless data['pass']
     data['dump'] = 0 unless data['dump']
     data['opts'] = 'defaults' unless data['opts']
     if data['comment']
       puts data['comment']
     end
     #  We make a minmal effort here to have some formatting, but if you have
     # obscenely long device names, it will just end up as space-delimited,
     # which is fine.
     _buf << sprintf("%-15s %-15s %s %s %s %s\n",
                     fs, data['mount_point'], data['type'], data['opts'],
                     data['dump'], data['pass'])
    end
%>
